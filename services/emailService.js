const nodemailer = require('nodemailer');
require('dotenv').config();

// ‚úÖ Verificaci√≥n de credenciales de correo
if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.error("‚ùå [LOG] ERROR: Falta configurar las credenciales de correo en las variables de entorno.");
    process.exit(1); // Detiene la ejecuci√≥n si no hay credenciales
}

// ‚úÖ Configurar el transporte de correo con mejor seguridad
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
    },
    secure: true, // Usar conexi√≥n segura si es posible
    tls: {
        rejectUnauthorized: false // ‚ö†Ô∏è Considera cambiar esto en producci√≥n
    }
});

// ‚úÖ Expresi√≥n regular para validar correos electr√≥nicos
const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

async function enviarCorreo(destinatario, asunto, mensaje, htmlMensaje = null) {
    try {
        if (!destinatario || !emailRegex.test(destinatario)) {
            console.warn("‚ùå [LOG] Direcci√≥n de correo inv√°lida:", destinatario);
            return { success: false, message: "Correo inv√°lido" };
        }

        console.log(`üì© [LOG] Intentando enviar correo a ${destinatario} con el asunto: "${asunto}"`);

        const mailOptions = {
            from: `"Notificaciones" <${process.env.EMAIL_USER}>`,
            to: destinatario,
            subject: asunto,
            text: mensaje,
            html: htmlMensaje || `<p>${mensaje}</p>`
        };

        let info = await transporter.sendMail(mailOptions);
        console.log(`‚úÖ [LOG] Correo enviado a ${destinatario}:`, info.response);

        return { success: true, message: 'Correo enviado con √©xito', response: info.response };
    } catch (error) {
        console.error(`‚ùå [LOG] Error enviando correo a ${destinatario}:`, error);
        return { success: false, message: error.message };
    }
}

module.exports = { enviarCorreo };
